// Generated by CoffeeScript 1.4.0
(function() {

  window.drawing = function() {
    var K, L, block, connect, d, fbe, feedbackSystem, ffg, inp, junc, model, obe, output, p, process, t, unit, _ref;
    unit = 48;
    d = new Drawing({
      id: "canvas",
      height: 500,
      unit: unit,
      showJunctions: false,
      defaultFill: "yellow"
    });
    _ref = d.shortcuts(), block = _ref[0], junc = _ref[1], connect = _ref[2], inp = _ref[3], output = _ref[4];
    ffg = block({
      o: [120, 80],
      label: "$k_r$"
    });
    inp({
      o: ffg.left,
      label: "$r(s)$"
    });
    fbe = block({
      o: ffg.right,
      type: "sum"
    });
    feedbackSystem = (function() {

      function feedbackSystem(spec) {
        this.spec = spec;
        if (this.spec.fill != null) {
          d.defaultFill = this.spec.fill;
        }
        this.B = block({
          o: this.spec.o,
          label: this.label("B")
        });
        this.E = block({
          o: this.B.right,
          type: "sum"
        });
        this.I = block({
          o: this.E.right,
          label: "$\\Large\\frac{1}{s}$"
        });
        this.I.j = junc({
          o: this.I.right,
          label: "I"
        });
        this.I.j2 = junc({
          o: this.I.j.bottom,
          label: "I2",
          offset: 3 / 2 * unit
        });
        this.A = block({
          o: this.I.j2.left,
          label: this.label("A")
        });
        connect(this.A.left, this.E.bottom);
        this.C = block({
          o: this.I.j.right,
          label: this.label("C")
        });
        this.C.j = junc({
          o: this.C.right,
          label: "C"
        });
      }

      feedbackSystem.prototype.label = function(name) {
        var _ref1, _ref2;
        return (_ref1 = (_ref2 = this.spec.labels) != null ? _ref2[name] : void 0) != null ? _ref1 : "$" + name + "$";
      };

      return feedbackSystem;

    })();
    fbe.j = junc({
      o: fbe.right,
      label: "fbe"
    });
    process = new feedbackSystem({
      o: fbe.j.right,
      fill: "blue"
    });
    output({
      o: process.C.j.right,
      label: "$y(s)$"
    });
    process.I.right.label({
      label: "$x$"
    });
    process.I.left.label({
      label: "$\\dot{x}$"
    });
    p = process.I.top;
    t = block({
      o: [p.x, p.y - 30],
      width: 300,
      label: "$\\color{blue}{H(s)=C(sI-A)^{-1}B}$"
    });
    t.style("fill:white; fill-opacity: 0.5;");
    fbe.j2 = junc({
      o: fbe.j.bottom,
      label: "fbe2",
      offset: 5 * unit
    });
    model = new feedbackSystem({
      o: fbe.j2.right,
      labels: {
        C: "$-C$"
      },
      fill: "red"
    });
    model.I.right.label({
      label: "$\\hat{x}$"
    });
    model.I.left.label({
      label: "$\\dot{\\hat{x}}$"
    });
    model.C.j.right.label({
      label: "$-\\hat{y}$"
    });
    d.defaultFill = "yellow";
    obe = block({
      o: process.C.j.bottom,
      offset: 3 * unit,
      type: "sum"
    });
    obe.style("fill:red; fill-opacity:0.1; stroke:black; stroke-width:1.5");
    obe.left.label({
      label: "$\\varepsilon$"
    });
    connect(model.C.right, obe.bottom);
    L = block({
      o: [process.E.x, obe.y],
      label: "$L$"
    });
    L.style("fill:red; fill-opacity:0.1; stroke:black; stroke-width:1.5");
    connect(obe.left, L.right);
    connect(L.bottom, model.E.top);
    p = model.E.bottom;
    t = block({
      o: [p.x, p.y + 2.3 * unit],
      width: 300,
      label: "$\\small\\color{red}{\\dot{\\hat{x}}=(A-BK-LC)\\hat{x}+Ly}$"
    });
    t.style("fill:white; fill-opacity: 0.5;");
    K = block({
      o: [fbe.x, L.y],
      label: "$-K$"
    });
    K.style("fill:yellow; fill-opacity:0.1; stroke:red; stroke-width:2");
    K.j = junc({
      o: model.I.j2.bottom,
      label: "fbg",
      offset: 1.5 * unit
    });
    connect(K.j.left, K.bottom);
    return connect(K.top, fbe.bottom);
  };

}).call(this);
